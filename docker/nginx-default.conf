map $http_x_forwarded_proto $myscheme { default $scheme; https https; }
map $myscheme $php_https { default off; https on; }

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    server_name _;
    
    server_tokens off; ## Don't show the nginx version number, a security best practice

    root /var/www/dms/public;

    keepalive_timeout   70;

    client_max_body_size 1024M;

    index index.html index.php;

    charset utf-8;

    # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

    # Add stdout logging
	error_log /dev/stdout info;
	access_log /dev/stdout;

    ## default headers
    
    ## CORS header handling https://enable-cors.org/server_nginx.html, 
    ##   http://nginx.org/en/docs/http/ngx_http_headers_module.html and 
    ##   http://tech.osteel.me/posts/2015/07/19/handling-cors-with-nginx.html 

    add_header 'Access-Control-Allow-Origin' $http_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;

    ## Default headers, in part oriented for recurity
    ## https://peteris.rocks/blog/exotic-http-headers/
    # add_header 'X-Frame-Options' 'SAMEORIGIN' always;
    add_header 'X-XSS-Protection' '1; mode=block' always;
    add_header 'X-Content-Type-Options' 'nosniff' always;

    add_header 'X-UA-Compatible' 'IE=edge' always;


    location ~* /tus-uploads {

	    # Disable request and response buffering
        proxy_request_buffering  off;
        proxy_buffering          off;
        proxy_http_version       1.1;

        # Add X-Forwarded-* headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_set_header         Upgrade $http_upgrade;
        proxy_set_header         Connection "upgrade";

        client_max_body_size     0;

        proxy_pass http://127.0.0.1:1080;        
    }

    location / {

        if ($request_method = 'OPTIONS') {
            # continue of the CORS related headers
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization';
            
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        try_files $uri $uri /index.php?$query_string;

    }

    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
    }

    location = /robots.txt  { 
        access_log off; 
        log_not_found off; 
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
        fastcgi_pass unix:/var/run/php-fpm.sock;

        fastcgi_index index.php;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_param HTTPS $php_https;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

}
